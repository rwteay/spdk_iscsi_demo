# zoned_io_async completion                           -*- shell-script -*-
#
# Bash completion script for the `zoned_io_async` CLI
#
# SPDX-FileCopyrightText: Samsung Electronics Co., Ltd
#
# SPDX-License-Identifier: BSD-3-Clause

_zoned_io_async_completions()
{
    local cur=${COMP_WORDS[COMP_CWORD]}
    local sub=""
    local opts=""

    COMPREPLY=()

    # Complete sub-commands
    if [[ $COMP_CWORD < 2 ]]; then
        COMPREPLY+=( $( compgen -W 'read write append --help' -- $cur ) )
        return 0
    fi

    # Complete sub-command arguments

    sub=${COMP_WORDS[1]}

    if [[ "$sub" != "enum" ]]; then
        opts+="/dev/nvme* "
    fi

    case "$sub" in
    
    "read")
        opts+="--nsid --slba --qdepth --data-output --subnqn --hostnqn --be --dev-nsid --admin --mem --direct --sync --async --help"
        ;;

    "write")
        opts+="--nsid --slba --qdepth --data-input --subnqn --hostnqn --be --dev-nsid --admin --mem --direct --sync --async --help"
        ;;

    "append")
        opts+="--nsid --slba --qdepth --data-input --subnqn --hostnqn --be --dev-nsid --admin --mem --direct --sync --async --help"
        ;;

    esac

    COMPREPLY+=( $( compgen -W "$opts" -- $cur ) )

    return 0
}

#
complete -o nosort -F _zoned_io_async_completions zoned_io_async

# ex: filetype=sh
