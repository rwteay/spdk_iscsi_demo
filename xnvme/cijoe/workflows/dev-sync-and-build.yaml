---
doc: |
  Example of development workflow with remote build and install

  * sysinfo: probes the remote for system information
  * sync: Synchronize local git-branch with remote
    * commit any un-committed changes with message **autocommit...**
    * switch the currently checked-out branch on remote to **main**
    * push **branch** to remote
    * checkout **branch** on remote
  * clean: Clean the remote git-repository
  * build: Build xNVMe on the remote
  * install: Install xNVMe on the remote

  Note, that in this setup then the remote cannot access local, thus, the git
  repository is **synced** by checkout/push/checkout.

steps:
- name: sysinfo
  uses: linux.sysinfo

- name: sync
  uses: git_push_checkout
  with:
    repository:
      remote: '{{ config.xnvme.repository.sync.remote }}'
      branch: '{{ config.xnvme.repository.sync.branch }}'
      path:
        local: '{{ config.xnvme.repository.path }}'
        remote: '{{ config.xnvme.repository.sync.remote_path }}'

- name: clean
  uses: xnvme_clean
  with:
    xnvme_source: '{{ config.xnvme.repository.sync.remote_path }}'

- name: build
  uses: xnvme_build
  with:
    xnvme_source: '{{ config.xnvme.repository.sync.remote_path }}'

- name: install
  uses: xnvme_install
  with:
    xnvme_source: '{{ config.xnvme.repository.sync.remote_path }}'
